/* eslint-disable react/jsx-indent */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import ScrollNum from './srcoll-num';
import numberCeil from './number-ceil';
import { prefixCls } from '@seed/ui-base';
import '../style/index.less';

export default class AnimatedInteraction extends Component {
  constructor(options) {
    super(options);
    this.animate = false;
  }

  componentWillUpdate(nextProps) {
    if (nextProps.active && nextProps.active != this.active) {
      this.animate = true;
    } else {
      this.animate = false;
    }
  }

  shouldComponentUpdate(nextProps) {
    let { props } = this;
    return (
      props.count != nextProps.count ||
      props.active != nextProps.active ||
      props.iconType != nextProps.iconType ||
      props.theme != nextProps.theme
    );
  }

  getDefaultText(iconType) {
    let text;
    switch (iconType) {
      case 'input-like':
        text = '赞';
        break;
      case 'input-collect':
        text = '收藏';
        break;
    }
    if (text) {
      return <div className={prefixCls('def-text')}>{text}</div>;
    }
    return null;
  }

  render() {
    const { active, iconType, count, theme } = this.props;
    this.active = active;
    const { animate } = this;

    return (
      <div
        className={`${prefixCls('ani-box')} ${prefixCls(iconType)} ${
          active ? prefixCls('active') : ''
        }`}
      >
        <i
          className={`${prefixCls(iconType + '-icon' + '-' + theme)} ${
            animate ? prefixCls('animate ') : ''
          }`}
        />
        <i
          className={
            animate
              ? prefixCls('icon-dot') + ' ' + prefixCls('animate')
              : prefixCls('icon-dot')
          }
        />
        {count < 10000 ? (
          count > 0 ? (
            <div className={prefixCls('num-box')}>
              <ScrollNum count={count} active={active} />
            </div>
          ) : (
            this.getDefaultText(iconType)
          )
        ) : (
          <div className={prefixCls('max-num')}>{numberCeil(count)}</div>
        )}
      </div>
    );
  }
}

AnimatedInteraction.propTypes = {
  active: PropTypes.bool,
  iconType: PropTypes.string.isRequired,
  count: PropTypes.number.isRequired,
  theme: PropTypes.string,
};

AnimatedInteraction.defaultProps = {
  active: false,
  theme: 'dp',
};
