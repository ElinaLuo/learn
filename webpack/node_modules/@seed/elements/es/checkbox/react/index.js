import _bindInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/bind";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime-corejs3/helpers/assertThisInitialized";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import "../style/index.css";

var Checkbox =
/*#__PURE__*/
function (_Component) {
  _inherits(Checkbox, _Component);

  function Checkbox(props) {
    var _context;

    var _this;

    _classCallCheck(this, Checkbox);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).call(this, props));
    _this.state = {
      checked: props.checked
    };
    _this.onChange = _bindInstanceProperty(_context = _this.onChange).call(_context, _assertThisInitialized(_this));
    return _this;
  }

  _createClass(Checkbox, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var checked = nextProps.checked,
          onChange = nextProps.onChange;

      if (nextProps.checked !== this.state.checked) {
        this.setState({
          checked: checked
        });
        onChange && onChange(checked);
      }
    }
  }, {
    key: "onChange",
    value: function onChange() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange;
      if (disabled) return;
      var checked = !this.state.checked;
      this.setState({
        checked: checked
      });
      onChange && onChange(checked);
    }
  }, {
    key: "render",
    value: function render() {
      var disabled = this.props.disabled;
      return React.createElement("label", {
        className: "seed-checkbox"
      }, React.createElement("input", {
        type: "checkbox",
        className: "seed-checkbox__input",
        checked: this.state.checked,
        disabled: disabled,
        onChange: this.onChange
      }), React.createElement("div", {
        className: "seed-checkbox__mark"
      }));
    }
  }]);

  return Checkbox;
}(Component);

export { Checkbox as default };
Checkbox.propTypes = {
  checked: PropTypes.bool,
  disabled: PropTypes.bool,
  onChange: PropTypes.func
};