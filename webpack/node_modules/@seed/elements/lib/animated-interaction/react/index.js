"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _srcollNum = _interopRequireDefault(require("./srcoll-num"));

var _numberCeil = _interopRequireDefault(require("./number-ceil"));

var _uiBase = require("@seed/ui-base");

require("../style/index.css");

/* eslint-disable react/jsx-indent */
var AnimatedInteraction =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(AnimatedInteraction, _Component);

  function AnimatedInteraction(options) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimatedInteraction);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedInteraction).call(this, options));
    _this.animate = false;
    return _this;
  }

  (0, _createClass2.default)(AnimatedInteraction, [{
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps) {
      if (nextProps.active && nextProps.active != this.active) {
        this.animate = true;
      } else {
        this.animate = false;
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var props = this.props;
      return props.count != nextProps.count || props.active != nextProps.active || props.iconType != nextProps.iconType || props.theme != nextProps.theme;
    }
  }, {
    key: "getDefaultText",
    value: function getDefaultText(iconType) {
      var text;

      switch (iconType) {
        case 'input-like':
          text = '赞';
          break;

        case 'input-collect':
          text = '收藏';
          break;
      }

      if (text) {
        return _react.default.createElement("div", {
          className: (0, _uiBase.prefixCls)('def-text')
        }, text);
      }

      return null;
    }
  }, {
    key: "render",
    value: function render() {
      var _context, _context2, _context3;

      var _this$props = this.props,
          active = _this$props.active,
          iconType = _this$props.iconType,
          count = _this$props.count,
          theme = _this$props.theme;
      this.active = active;
      var animate = this.animate;
      return _react.default.createElement("div", {
        className: (0, _concat.default)(_context = (0, _concat.default)(_context2 = "".concat((0, _uiBase.prefixCls)('ani-box'), " ")).call(_context2, (0, _uiBase.prefixCls)(iconType), " ")).call(_context, active ? (0, _uiBase.prefixCls)('active') : '')
      }, _react.default.createElement("i", {
        className: (0, _concat.default)(_context3 = "".concat((0, _uiBase.prefixCls)(iconType + '-icon' + '-' + theme), " ")).call(_context3, animate ? (0, _uiBase.prefixCls)('animate ') : '')
      }), _react.default.createElement("i", {
        className: animate ? (0, _uiBase.prefixCls)('icon-dot') + ' ' + (0, _uiBase.prefixCls)('animate') : (0, _uiBase.prefixCls)('icon-dot')
      }), count < 10000 ? count > 0 ? _react.default.createElement("div", {
        className: (0, _uiBase.prefixCls)('num-box')
      }, _react.default.createElement(_srcollNum.default, {
        count: count,
        active: active
      })) : this.getDefaultText(iconType) : _react.default.createElement("div", {
        className: (0, _uiBase.prefixCls)('max-num')
      }, (0, _numberCeil.default)(count)));
    }
  }]);
  return AnimatedInteraction;
}(_react.Component);

exports.default = AnimatedInteraction;
AnimatedInteraction.propTypes = {
  active: _propTypes.default.bool,
  iconType: _propTypes.default.string.isRequired,
  count: _propTypes.default.number.isRequired,
  theme: _propTypes.default.string
};
AnimatedInteraction.defaultProps = {
  active: false,
  theme: 'dp'
};