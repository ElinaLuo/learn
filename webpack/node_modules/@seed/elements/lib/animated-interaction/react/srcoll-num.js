"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

var _setTimeout2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/set-timeout"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBase = require("@seed/ui-base");

require("../style/srcoll-num.css");

var ScrollNum =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(ScrollNum, _Component);

  function ScrollNum(options) {
    var _this;

    (0, _classCallCheck2.default)(this, ScrollNum);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollNum).call(this, options));
    _this.numArr = [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0];
    _this.lastNum = 0;
    _this.state = {
      nums: _this.getNumChange(_this.props.count).lastNums
    };
    return _this;
  }

  (0, _createClass2.default)(ScrollNum, [{
    key: "getNums",
    value: function getNums(num) {
      var _context;

      var currentNums = (0, _map.default)(_context = num.toString().split('')).call(_context, function (n) {
        return {
          val: Number(n)
        };
      });
      return currentNums;
    } // props发生改变

  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      var _this2 = this;

      var count = newProps.count;

      var _this$getNumChange = this.getNumChange(count),
          currentNums = _this$getNumChange.currentNums,
          lastNums = _this$getNumChange.lastNums;

      this.timeOutHandle = (0, _setTimeout2.default)(function () {
        _this2.setState({
          nums: currentNums
        });
      }, 300);
      this.setState({
        nums: lastNums
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.timeOutHandle);
    }
  }, {
    key: "getNumChange",
    value: function getNumChange(count) {
      if (!this.lastNum) this.lastNum = count;
      var currentNums = this.getNums(count);
      var lastNums = this.getNums(this.lastNum); // 位数没有变化

      if (currentNums.length == lastNums.length) {
        // 数字变大
        if (count > this.lastNum) {
          (0, _forEach.default)(lastNums).call(lastNums, function (num, index) {
            if (currentNums[index].val !== lastNums[index].val) {
              num.inc = true;
            }
          });
        } else if (count < this.lastNum) {
          (0, _forEach.default)(lastNums).call(lastNums, function (num, index) {
            if (currentNums[index].val !== lastNums[index].val) {
              num.dec = true;
            }
          });
        }
      } else if (count > this.lastNum) {
        // 全部数字增加
        (0, _forEach.default)(lastNums).call(lastNums, function (n) {
          n.inc = true;
        });
      } else {
        // 全部数字减小
        (0, _forEach.default)(lastNums).call(lastNums, function (n) {
          n.dec = true;
        });
      }

      this.lastNum = count;
      return {
        lastNums: lastNums,
        currentNums: currentNums
      };
    }
  }, {
    key: "getNumCSS",
    value: function getNumCSS(num, active) {
      var cssName = 'seed-num ';
      if (num.inc) cssName += 'seed-increase ';
      if (num.dec) cssName += 'seed-decrease ';
      if (active) cssName += 'seed-active ';
      return cssName;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var active = this.props.active;
      var nums = this.state.nums;
      return _react.default.createElement("div", {
        className: "seed-num-wrap"
      }, (0, _map.default)(nums).call(nums, function (num, index) {
        return _react.default.createElement("div", {
          className: _this3.getNumCSS(num, active),
          key: index
        }, _react.default.createElement("div", {
          className: (0, _uiBase.prefixCls)('dec')
        }, _this3.numArr[num.val]), _react.default.createElement("div", {
          className: (0, _uiBase.prefixCls)('me')
        }, _this3.numArr[num.val + 1]), _react.default.createElement("div", {
          className: (0, _uiBase.prefixCls)('inc')
        }, _this3.numArr[num.val + 2]));
      }));
    }
  }]);
  return ScrollNum;
}(_react.Component);

exports.default = ScrollNum;
ScrollNum.propTypes = {
  active: _propTypes.default.bool.isRequired,
  count: _propTypes.default.number.isRequired
};