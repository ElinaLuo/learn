import _mapInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/map";
import _Array$from from "@babel/runtime-corejs3/core-js-stable/array/from";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cls from 'classnames';
import { prefixCls } from '@seed/ui-base';
import "../style/mtstar.css";

var MTStar =
/*#__PURE__*/
function (_Component) {
  _inherits(MTStar, _Component);

  function MTStar() {
    _classCallCheck(this, MTStar);

    return _possibleConstructorReturn(this, _getPrototypeOf(MTStar).apply(this, arguments));
  }

  _createClass(MTStar, [{
    key: "render",
    value: function render() {
      var star = this.props.star;

      var starInit = _Array$from({
        length: 5
      });

      var starValueRound = Math.round(star / 10);
      var starValueCeil = Math.ceil(star / 10);

      var starList = _mapInstanceProperty(starInit).call(starInit, function (item, index) {
        return {
          value: index + 1 <= starValueRound ? index + 1 : 0,
          isHalf: star % 10 > 0 && index + 1 === starValueCeil
        };
      });

      return React.createElement("div", {
        className: prefixCls('star-mt-wrap')
      }, _mapInstanceProperty(starList).call(starList, function (ele, index) {
        return React.createElement("div", {
          className: cls(prefixCls('star-mt'), prefixCls("star-mt-".concat(ele.value))),
          key: index
        }, ele.isHalf && React.createElement("div", {
          className: prefixCls('star-mt-half')
        }));
      }));
    }
  }]);

  return MTStar;
}(Component);

export { MTStar as default };