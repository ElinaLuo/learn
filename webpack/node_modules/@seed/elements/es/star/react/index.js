import _mapInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/map";
import _bindInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/bind";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime-corejs3/helpers/assertThisInitialized";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import React from 'react';
import PropTypes from 'prop-types';
import cls from 'classnames';
import { handleScore, STAR } from '../util/utils';
import { prefixCls } from '@seed/ui-base';
import "../style/index.css";

var Star =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Star, _React$Component);

  function Star(props) {
    var _context;

    var _this;

    _classCallCheck(this, Star);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Star).call(this, props));
    _this.onClick = _bindInstanceProperty(_context = _this.onClick).call(_context, _assertThisInitialized(_this));
    return _this;
  }

  _createClass(Star, [{
    key: "onClick",
    value: function onClick(e) {
      var canClick = this.props.canClick;
      var index = e.target.dataset.index;

      if (canClick && index) {
        var _index = Number(index);

        this.props.onChange(_index);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          star = _this$props.star,
          score = _this$props.score,
          starStyle = _this$props.starStyle,
          textStyle = _this$props.textStyle,
          classname = _this$props.classname;

      if (star < 0 || star === null) {
        return null;
      }

      var _star = handleScore(star) && handleScore(star).toString().replace('.', '_') || 0;

      return React.createElement("div", {
        className: cls(prefixCls('star_wrap'), classname)
      }, React.createElement("div", {
        className: prefixCls('star_icon'),
        onClick: this.onClick
      }, _mapInstanceProperty(STAR).call(STAR, function (item, index) {
        return React.createElement("span", {
          key: index,
          "data-index": item,
          className: cls(prefixCls('star'), [prefixCls("star_".concat(_star))]),
          style: starStyle
        });
      })), score ? React.createElement("div", {
        className: cls(prefixCls('star_score'), [prefixCls("score_".concat(_star))]),
        style: textStyle
      }, score) : null);
    }
  }]);

  return Star;
}(React.Component);

export { Star as default };
Star.propTypes = {
  star: PropTypes.number,
  score: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  starStyle: PropTypes.object,
  textStyle: PropTypes.object,
  classname: PropTypes.string,
  canClick: PropTypes.bool,
  onChange: PropTypes.func
};
Star.defaultProps = {
  star: 0,
  score: '',
  starStyle: {},
  textStyle: {},
  classname: '',
  canClick: false,
  onChange: function onChange() {}
};