import '@seed/ui-base';
import '../style/srcoll-num.css';
import { _ as __vue_normalize__ } from '../../normalize-component-19a2903f.js';

//
var script = {
  name: 'scroll-num',

  data: function data() {
    return {
      numArr: [9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0],
      lastNum: 0,
      nums: this.getNumChange(this.count).lastNums,
    };
  },

  beforeDestroy: function beforeDestroy() {
    clearTimeout(this.timeOutHandle);
  },

  props: {
    count: Number,
    active: Boolean,
  },

  watch: {
    count: function count(newVal, oldVal) {
      var this$1 = this;

      if (newVal !== oldVal) {
        var ref = this.getNumChange(newVal);
        var currentNums = ref.currentNums;
        var lastNums = ref.lastNums;
        this.timeOutHandle = setTimeout(function () {
          this$1.nums = currentNums;
        }, 300);
        this.nums = lastNums;
      }
    },
  },

  methods: {
    getNums: function getNums(num) {
      var currentNums = num
        .toString()
        .split('')
        .map(function (n) {
          return {
            val: Number(n),
          };
        });
      return currentNums;
    },

    getNumChange: function getNumChange(count) {
      if (!this.lastNum) { this.lastNum = count; }
      var currentNums = this.getNums(count);
      var lastNums = this.getNums(this.lastNum);
      // 位数没有变化
      if (currentNums.length == lastNums.length) {
        // 数字变大
        if (count > this.lastNum) {
          lastNums.forEach(function (num, index) {
            if (currentNums[index].val !== lastNums[index].val) {
              num.inc = true;
            }
          });
        } else if (count < this.lastNum) {
          lastNums.forEach(function (num, index) {
            if (currentNums[index].val !== lastNums[index].val) {
              num.dec = true;
            }
          });
        }
      } else if (count > this.lastNum) {
        // 全部数字增加
        lastNums.forEach(function (n) {
          n.inc = true;
        });
      } else {
        // 全部数字减小
        lastNums.forEach(function (n) {
          n.dec = true;
        });
      }
      this.lastNum = count;
      return { lastNums: lastNums, currentNums: currentNums };
    },

    getNumCSS: function getNumCSS(num, active) {
      var cssName = 'seed-num ';
      if (num.inc) { cssName += 'seed-increase '; }
      if (num.dec) { cssName += 'seed-decrease '; }
      if (active) { cssName += 'seed-active '; }
      return cssName;
    },
  },
};

/* script */
var __vue_script__ = script;

/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"seed-num-wrap"},_vm._l((_vm.nums),function(num,index){return _c('div',{key:index,class:_vm.getNumCSS(num, _vm.active)},[_c('div',{staticClass:"seed-dec"},[_vm._v(_vm._s(_vm.numArr[num.val]))]),_vm._v(" "),_c('div',{staticClass:"seed-me"},[_vm._v(_vm._s(_vm.numArr[num.val + 1]))]),_vm._v(" "),_c('div',{staticClass:"seed-inc"},[_vm._v(_vm._s(_vm.numArr[num.val + 2]))])])}),0)};
var __vue_staticRenderFns__ = [];

  /* style */
  var __vue_inject_styles__ = undefined;
  /* scoped */
  var __vue_scope_id__ = undefined;
  /* module identifier */
  var __vue_module_identifier__ = undefined;
  /* functional template */
  var __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var ScrollNum = __vue_normalize__(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    undefined,
    undefined
  );

export default ScrollNum;
