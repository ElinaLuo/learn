"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/defineProperty"));

var _setTimeout2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/set-timeout"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("../style/index.css");

var _uiBase = require("@seed/ui-base");

var NoviceGuidance =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(NoviceGuidance, _Component);

  function NoviceGuidance(props) {
    var _this;

    (0, _classCallCheck2.default)(this, NoviceGuidance);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NoviceGuidance).call(this, props));

    _this.handleClose = function () {
      _this.setState({
        visible: false
      });
    };

    _this.handleTransitionEnd = function () {
      var _this$props = _this.props,
          show = _this$props.show,
          onHide = _this$props.onHide,
          onShow = _this$props.onShow,
          autoHideTimeout = _this$props.autoHideTimeout;

      if (show) {
        onShow();

        if (autoHideTimeout) {
          _this.setAutoHide();
        }
      } else {
        _this.setState({
          show: false
        }, onHide);
      }
    };

    _this.state = {
      show: props.show,
      visible: false
    };
    return _this;
  }

  (0, _createClass2.default)(NoviceGuidance, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props2 = this.props,
          autoHideTimeout = _this$props2.autoHideTimeout,
          show = _this$props2.show;

      if (show && autoHideTimeout) {
        this.setAutoHide();
      }

      if (show) {
        var tid = (0, _setTimeout2.default)(function () {
          _this2.setState({
            visible: true
          });

          clearTimeout(tid);
          tid = null;
        }, 0);
      }
    }
  }, {
    key: "setAutoHide",
    value: function setAutoHide() {
      var _this3 = this;

      var _this$props3 = this.props,
          autoHideTimeout = _this$props3.autoHideTimeout,
          onHide = _this$props3.onHide;
      this.timeout = (0, _setTimeout2.default)(function () {
        _this3.setState({
          show: false
        });

        onHide();

        _this3.clearAutoHideTimeout();
      }, autoHideTimeout);
    }
  }, {
    key: "clearAutoHideTimeout",
    value: function clearAutoHideTimeout() {
      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.clearAutoHideTimeout();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      var _this4 = this;

      if (newProps.show === this.props.show) {
        return;
      }

      if (newProps.show) {
        this.setState({
          show: newProps.show
        }, function () {
          var tid = (0, _setTimeout2.default)(function () {
            _this4.setState({
              visible: true
            });

            clearTimeout(tid);
            tid = null;
          }, 0);
        });
      } else {
        this.setState({
          visible: false
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          children = _this$props4.children,
          type = _this$props4.type,
          arrowPosition = _this$props4.arrowPosition,
          flipArrow = _this$props4.flipArrow;
      var _this$state = this.state,
          show = _this$state.show,
          visible = _this$state.visible;
      var outerClassName = (0, _classnames.default)((0, _uiBase.prefixCls)('novice-guidance'), (0, _uiBase.prefixCls)('novice-guidance', type), (0, _defineProperty2.default)({}, (0, _uiBase.prefixCls)('novice-guidance', 'fadein'), visible));
      var textClassName = (0, _uiBase.prefixCls)('novice-guidance', 'text');
      var arrowClassName = (0, _classnames.default)((0, _uiBase.prefixCls)('novice-guidance', 'arrow'), (0, _defineProperty2.default)({}, (0, _uiBase.prefixCls)('novice-guidance', 'arrow', 'flipped'), flipArrow));

      if (!show) {
        return null;
      }

      return _react.default.createElement("div", {
        className: outerClassName,
        onTransitionEnd: this.handleTransitionEnd
      }, _react.default.createElement("div", {
        className: arrowClassName,
        style: {
          left: arrowPosition + '%'
        }
      }), _react.default.createElement("div", {
        className: (0, _uiBase.prefixCls)('novice-guidance', 'wrap')
      }, _react.default.createElement("div", {
        className: textClassName
      }, children), _react.default.createElement("span", {
        className: (0, _uiBase.prefixCls)('novice-guidance', 'close'),
        onClick: this.handleClose
      })));
    }
  }]);
  return NoviceGuidance;
}(_react.Component);

exports.default = NoviceGuidance;
NoviceGuidance.propTypes = {
  type: _propTypes.default.oneOf(['circle', 'rectangle']),
  show: _propTypes.default.bool,
  autoHideTimeout: _propTypes.default.number,
  children: _propTypes.default.node,
  onHide: _propTypes.default.func,
  onShow: _propTypes.default.func,
  arrowPosition: _propTypes.default.number,
  flipArrow: _propTypes.default.bool
};
NoviceGuidance.defaultProps = {
  type: 'rectangle',
  show: false,
  autoHideTimeout: 5000,
  onHide: _uiBase.NOOP,
  onShow: _uiBase.NOOP,
  arrowPosition: 50,
  flipArrow: false
};