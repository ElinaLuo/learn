import { prefixCls } from '@seed/ui-base';
import { _ as __vue_normalize__ } from '../../normalize-component-19a2903f.js';
import '../style/index.css';

var handleScore = function(score) {
  if (score >= 0 && score < 5) {
    return 0;
  } else if (score >= 5 && score < 10) {
    return 5;
  } else if (score >= 10 && score < 15) {
    return 10;
  } else if (score >= 15 && score < 20) {
    return 15;
  } else if (score >= 20 && score < 25) {
    return 20;
  } else if (score >= 25 && score < 30) {
    return 25;
  } else if (score >= 30 && score < 35) {
    return 30;
  } else if (score >= 35 && score < 40) {
    return 35;
  } else if (score >= 40 && score < 45) {
    return 40;
  } else if (score >= 45 && score < 48) {
    return 45;
  } else if (score >= 48) {
    return 50;
  } else {
    return 0;
  }
};

var STAR = ['10', '20', '30', '40', '50'];

//

var script = {
  name: 'star',
  props: {
    star: {
      type: Number,
      default: 0,
    },
    score: {
      type: [String, Number],
      default: '',
    },
    starStyle: {
      type: Object,
    },
    textStyle: {
      type: Object,
    },
    canClick: {
      type: Boolean,
      default: false,
    },
  },
  data: function data() {
    return { STAR: STAR };
  },
  computed: {
    starclass: function starclass() {
      var _score =
        (handleScore(this.star) &&
          handleScore(this.star)
            .toString()
            .replace('.', '_')) ||
        0;
      return [prefixCls('star'), prefixCls('star_' + _score)];
    },
    scoreclass: function scoreclass() {
      var _score =
        (handleScore(this.star) &&
          handleScore(this.star)
            .toString()
            .replace('.', '_')) ||
        0;
      return [prefixCls('star_score'), prefixCls('score_' + _score)];
    },
    getStarStyle: function getStarStyle() {
      return this.starStyle;
    },
    getTextStyle: function getTextStyle() {
      return this.starStyle;
    },
  },
  methods: {
    prefixCls: function prefixCls$1() {
      var arg = [], len = arguments.length;
      while ( len-- ) arg[ len ] = arguments[ len ];

      return prefixCls.apply(void 0, arg);
    },
    handleClick: function handleClick(e) {
      var ref = e.target.dataset;
      var index = ref.index;
      if (this.canClick && index) {
        var _index = Number(index);
        this.$emit('click', _index, this);
      }
    },
  },
};

/* script */
var __vue_script__ = script;

/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.prefixCls('star_wrap')},[_c('div',{class:_vm.prefixCls('star_icon')},_vm._l((_vm.STAR),function(index){return _c('span',{key:index,class:_vm.starclass,style:(_vm.starStyle),attrs:{"data-index":index},on:{"click":_vm.handleClick}})}),0),_vm._v(" "),(_vm.score)?_c('div',{class:_vm.scoreclass,style:(_vm.textStyle)},[_vm._v(_vm._s(_vm.score))]):_vm._e()])};
var __vue_staticRenderFns__ = [];

  /* style */
  var __vue_inject_styles__ = undefined;
  /* scoped */
  var __vue_scope_id__ = undefined;
  /* module identifier */
  var __vue_module_identifier__ = undefined;
  /* functional template */
  var __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var index = __vue_normalize__(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    undefined,
    undefined
  );

export default index;
