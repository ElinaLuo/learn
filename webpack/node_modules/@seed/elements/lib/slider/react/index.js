"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _uiBase = require("@seed/ui-base");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utilColor = _interopRequireDefault(require("@dp/util-color"));

require("../style/slider.css");

var _mixin = require("../common/mixin.js");

var Slider =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Slider, _Component);

  function Slider(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Slider);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Slider).call(this, props));

    _this.setProgressRef = function (el) {
      _this.progressEl = el;
    };

    _this.setHandlerRef = function (el) {
      _this.handlerEl = el;
    };

    _this.handleMarkClick = function (index) {
      return function () {
        _this.props.onChange(index);
      };
    };

    (0, _mixin.mixin)((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      handlerX: 0
    };
    return _this;
  }

  (0, _createClass2.default)(Slider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.whenMount();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.whenUpdateProps(nextProps.marks, nextProps.value);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.whenUnmount();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var classes = this.classes,
          props = this.props,
          state = this.state,
          handlerWidth = this.handlerWidth;
      var marks = props.marks;
      var handlerX = state.handlerX;
      var markLength = marks.length;
      var colorStops = (0, _utilColor.default)('#ffb76c', '#f63', markLength);
      var currentValue = this.getCurrentValue();
      return _react.default.createElement("div", {
        className: classes.slider
      }, _react.default.createElement("div", {
        className: classes.progress,
        ref: this.setProgressRef
      }, _react.default.createElement("div", {
        className: classes.progressInactive,
        style: {
          left: handlerX + 'px'
        }
      })), _react.default.createElement("div", {
        className: classes.marks
      }, (0, _map.default)(marks).call(marks, function (_ref, index) {
        var label = _ref.label;
        return _react.default.createElement("div", {
          className: classes.markItem,
          key: index,
          onClick: _this2.handleMarkClick(index),
          style: {
            left: index / (markLength - 1) * 100 + '%'
          }
        }, _react.default.createElement("div", {
          className: classes.markPoint,
          style: {
            backgroundColor: index <= currentValue ? colorStops[index] : ''
          }
        }), _react.default.createElement("div", {
          className: classes.markText,
          style: {
            color: index <= currentValue ? '#f63' : ''
          }
        }, label));
      })), _react.default.createElement("div", {
        ref: this.setHandlerRef,
        className: classes.handler,
        onTouchStart: this.handleTouchStart,
        onTouchMove: this.handleTouchMove,
        onTouchEnd: this.handleTouchEnd,
        style: {
          left: handlerX + handlerWidth / 2 + 'px'
        }
      }, _react.default.createElement("div", {
        className: classes.handlerBar
      })));
    }
  }]);
  return Slider;
}(_react.Component);

exports.default = Slider;
Slider.propTypes = {
  value: _propTypes.default.number,
  marks: _propTypes.default.arrayOf(_propTypes.default.shape({
    label: _propTypes.default.string.isRequired
  }).isRequired).isRequired,
  onChange: _propTypes.default.func
};
Slider.defaultProps = {
  value: 0,
  onChange: _uiBase.NOOP
};