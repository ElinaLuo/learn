import React from 'react';
import PropTypes from 'prop-types';

import cls from 'classnames';
import { handleScore, STAR } from '../util/utils';
import { prefixCls } from '@seed/ui-base';
import '../style/index.less';

export default class Star extends React.Component {
  constructor(props) {
    super(props);
    this.onClick = this.onClick.bind(this);
  }

  onClick(e) {
    const { canClick } = this.props;
    const { index } = e.target.dataset;
    if (canClick && index) {
      const _index = Number(index);
      this.props.onChange(_index);
    }
  }

  render() {
    const { star, score, starStyle, textStyle, classname } = this.props;
    if (star < 0 || star === null) {
      return null;
    }
    const _star =
      (handleScore(star) &&
        handleScore(star)
          .toString()
          .replace('.', '_')) ||
      0;

    return (
      <div className={cls(prefixCls('star_wrap'), classname)}>
        <div className={prefixCls('star_icon')} onClick={this.onClick}>
          {STAR.map((item, index) => {
            return (
              <span
                key={index}
                data-index={item}
                className={cls(prefixCls('star'), [prefixCls(`star_${_star}`)])}
                style={starStyle}
              ></span>
            );
          })}
        </div>
        {score ? (
          <div
            className={cls(prefixCls('star_score'), [
              prefixCls(`score_${_star}`),
            ])}
            style={textStyle}
          >
            {score}
          </div>
        ) : null}
      </div>
    );
  }
}

Star.propTypes = {
  star: PropTypes.number,
  score: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  starStyle: PropTypes.object,
  textStyle: PropTypes.object,
  classname: PropTypes.string,
  canClick: PropTypes.bool,
  onChange: PropTypes.func,
};
Star.defaultProps = {
  star: 0,
  score: '',
  starStyle: {},
  textStyle: {},
  classname: '',
  canClick: false,
  onChange: () => {},
};
