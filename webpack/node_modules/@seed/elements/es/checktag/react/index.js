import _bindInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/bind";
import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime-corejs3/helpers/assertThisInitialized";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cls from 'classnames';
import "../style/index.css";

var Checktag =
/*#__PURE__*/
function (_Component) {
  _inherits(Checktag, _Component);

  function Checktag(props) {
    var _context;

    var _this;

    _classCallCheck(this, Checktag);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checktag).call(this, props));
    _this.state = {
      checked: props.checked
    };
    _this.onClick = _bindInstanceProperty(_context = _this.onClick).call(_context, _assertThisInitialized(_this));
    return _this;
  }

  _createClass(Checktag, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var checked = nextProps.checked,
          onChange = nextProps.onChange;

      if (nextProps.checked !== this.state.checked) {
        this.setState({
          checked: checked
        });
        onChange && onChange(checked);
      }
    }
  }, {
    key: "onClick",
    value: function onClick() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange;
      if (disabled) return;
      var checked = !this.state.checked;
      this.setState({
        checked: checked
      });
      onChange && onChange(checked);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          disabled = _this$props2.disabled,
          text = _this$props2.text,
          subText = _this$props2.subText;
      var isSingleLine = !subText;
      var checktagCls = cls({
        'seed-checktag': true,
        'seed-checktag--single-line': isSingleLine,
        'seed-checktag--multi-line': !isSingleLine,
        'seed-checktag--checked': this.state.checked,
        'seed-checktag--disabled': disabled
      });
      return React.createElement("div", {
        className: checktagCls,
        onClick: this.onClick
      }, isSingleLine ? text : React.createElement("div", {
        className: "seed-checktag__content"
      }, React.createElement("p", {
        className: "seed-checktag__text"
      }, text), React.createElement("p", {
        className: "seed-checktag__subtext"
      }, subText)));
    }
  }]);

  return Checktag;
}(Component);

export { Checktag as default };
Checktag.propTypes = {
  checked: PropTypes.bool,
  disabled: PropTypes.bool,
  text: PropTypes.string,
  subText: PropTypes.string,
  onChange: PropTypes.func
};