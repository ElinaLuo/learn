import _classCallCheck from "@babel/runtime-corejs3/helpers/classCallCheck";
import _createClass from "@babel/runtime-corejs3/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/getPrototypeOf";
import _inherits from "@babel/runtime-corejs3/helpers/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import "../style/index.css";

var Badge =
/*#__PURE__*/
function (_Component) {
  _inherits(Badge, _Component);

  function Badge() {
    _classCallCheck(this, Badge);

    return _possibleConstructorReturn(this, _getPrototypeOf(Badge).apply(this, arguments));
  }

  _createClass(Badge, [{
    key: "renderRedDot",
    value: function renderRedDot() {
      return React.createElement("div", {
        className: "seed-reddot"
      });
    }
  }, {
    key: "renderBadge",
    value: function renderBadge() {
      var children = this.props.children;
      return React.createElement("div", {
        className: "seed-badge"
      }, children);
    }
  }, {
    key: "render",
    value: function render() {
      var type = this.props.type;
      return type === 'normal' ? this.renderBadge() : this.renderRedDot();
    }
  }]);

  return Badge;
}(Component);

export { Badge as default };
Badge.propTypes = {
  type: PropTypes.oneOf(['dot', 'normal']),
  children: PropTypes.string
};