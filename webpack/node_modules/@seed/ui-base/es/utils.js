import _slicedToArray from "@babel/runtime-corejs3/helpers/slicedToArray";
import { PREFIX_CLS, NOOP } from './const';
export { NOOP }; // bem class拼接规则

export var prefixCls = function prefixCls() {
  var temp = PREFIX_CLS + '-'; // debugger
  // const [block,element,modifier] = [...args];
  // const [b,e,m] = [...args];
  // console.log([...args]);
  // const [block,element,modifier] = [...arguments];

  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  temp = temp + args.join('-'); // if(b){
  //     temp = temp + b;
  // }
  // if(e){
  //     temp = temp + "-" +e;
  // }
  // if(m){
  //     temp = temp + "-" +m;
  // }
  //

  return temp;
}; // 小数尾部清0

export var priceZeroClear = function priceZeroClear(notclearZero, originPrice) {
  if (notclearZero === true) return originPrice; //不移除价格小数末尾的0

  if (!originPrice) return '';
  var changedPrice = originPrice + '';

  var _changedPrice$split = changedPrice.split('.'),
      _changedPrice$split2 = _slicedToArray(_changedPrice$split, 2),
      intStr = _changedPrice$split2[0],
      miniStr = _changedPrice$split2[1];

  if (!!miniStr) {
    var miniStrNext = miniStr.replace(/(0+$)/, '');

    if (!!miniStrNext) {
      return intStr + '.' + miniStrNext;
    }

    return intStr;
  } else {
    return changedPrice;
  }
};